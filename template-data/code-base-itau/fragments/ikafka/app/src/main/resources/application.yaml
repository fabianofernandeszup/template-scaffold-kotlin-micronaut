kafka:
 enable:
   idempotence: \${KAFKA_ENABLE_IDEMPOTENCE:true} #Configuração referente ao produtor. Com ela habilitada, o broker garante que a mensagem publicada não seja duplicada, principalmente em casos de falhas. 
 health:
   enabled: \${KAFKA_HEALTH_ENABLED:false} #Configuração referente ao HealthIndicator do micronaut. Com ela desabilitada, o health do ikafka não é integrado ao health do micronaut.
 bootstrap:
   servers: \${KAFKA_BOOTSTRAP_SERVERS:\`kafka-events.ctsp.des.cloud.ihf:31101\`} #Bootstrap server referente ao <hostname>:<port> do broker kafka.
 producers:
   product-client:
     key:
       serializer: org.apache.kafka.common.serialization.StringSerializer #Classe do serializador para o key que implementa org.apache.kafka.common.serialization.Serializer com suas devidas particularidades de serialização.
     value:
       serializer: io.confluent.kafka.serializers.KafkaJsonSerializer #Classe do serializador para o value que implementa org.apache.kafka.common.serialization.Serializer com suas devidas particularidades de serialização.
 consumers:
   group-pubsub-consumer-group:
     key:
       deserializer: org.apache.kafka.common.serialization.StringDeserializer #Classe do deserializador para o key que implementa org.apache.kafka.common.serialization.Serializer com suas devidas particularidades de serialização.
     value:
       deserializer: io.confluent.kafka.serializers.KafkaJsonDeserializer #Classe do deserializador para o value que implementa org.apache.kafka.common.serialization.Serializer com suas devidas particularidades de serialização.
 schema:
   registry:
     url: \${KAFKA_SCHEMA_REGISTRY:\`https://kafka-id-schema-registry-events.ctsp.des.cloud.ihf:8082\`} #Hostname e port do \`Schema Registry\`.
 value:
   subject:
     name:
       strategy: \${KAFKA_VALUE_SUBJECT_NAME_STRATEGY:io.confluent.kafka.serializers.subject.TopicRecordNameStrategy} #Estratégia que o serialiador utilizará para registrar o nome esquema no schema registry. Com o valor \`TopicRecordNameStrategy\`, o serializador deriva o nome do assunto do tópico e do nome do registro.
 specific:
   avro:
     reader: \${KAFKA_SPECIFIC_AVRO_READER:true} #Informa ao \`Kafka/Schema Registry\` que estamos usando um tipo específico de Avro, caso contrário, kafka esperará que \`GenericRecord\` seja usado no tópico.
 auto:
   register:
     schemas: \${KAFKA_AUTO_REGISTER_SCHEMAS:false} #Desabilita o registro automático de esquemas no \`Schema Registry\`.
 security:
   protocol: \${KAFKA_SECURITY_PROTOCOL:ssl} #Protocolo para comunicar com o broker.
 ssl:
   keystore:
     location: \${KAFKA_SSL_KEYSTORE_LOCATION:\`./CPS000X.keystore.jks\`} #Localização do arquivo de armazenamento de chaves.
     password: \${KAFKA_SSL_KEYSTORE_PASS:orangestack@ey5_keystore} #Senha de armazenamento para o arquivo de armazenamento de chaves.
   truststore:
     location: \${KAFKA_SSL_TRUSTSTORE_LOCATION:\`./CPS000X.truststore.jks\`} #Localização do arquivo de armazenamento confiável.
     password: \${KAFKA_SSL_TRUSTSTORE_PASS:orangestack@ey5_truststore} #Senha para o arquivo de armazenamento confiável. 
     type: \${KAFKA_SSL_TRUSTSTORE_TYPE:PKCS12} #Formato de arquivo do arquivo de armazenamento confiável.
 linger:
   ms: \${KAFKA_LINGER_MS:0} #Configuração relativa ao produtor. Refere-se à latência em milissegundo (ms) para o atraso no envio dos dados quando ainda não se tem carga suficiente, ou seja, carga abaixo de **batch.size**.
 batch:
   size: \${KAFKA_BATCH_SIZE:16384} #Configuração relativa ao produtor. Refere-se ao controle do tamanho do lote padrão em bytes.
 compression:
   type: \${KAFKA_COMPRESSION_TYPE:LZ4} #Configuração referente ao produtor. Refere-se ao tipo de compactação para todos os dados gerados pelo produtor.
   
kaas:
  cert:
    client:
      user: \${KAAS_CERT_CLIENT_USER:<SERVICE_USER>} #Usuário de serviço para obtenção dos certificados ssl para o ikafka.
      password: \${KAAS_CERT_CLIENT_PASS:<SERVICE_PASS>} #Senha (de dupla custódia) do usuário de serviço para obtenção dos certificados ssl para o ikafka.
    environment: \${KAAS_CERT_ENV:<ENV>} #Ambiente para o qual o certificado será gerado.


